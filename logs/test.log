root - DEBUG - func:'read' args:[(<file_io.File object at 0x000001D73D5F45C0>,), {}] took: 0.0040 sec
logger - INFO - Shape of CMR1.csv when read: (3, 5)
root - DEBUG - func:'read' args:[(<file_io.File object at 0x000001D73BA69A30>,), {}] took: 0.0030 sec
logger - INFO - Shape of CMR2.csv when read: (3, 5)
root - DEBUG - func:'read' args:[(<file_io.File object at 0x000001D73BADC7D0>,), {}] took: 0.0010 sec
logger - INFO - Shape of CMR3.csv when read: (3, 5)
root - DEBUG - func:'load_data' args:[(<processor.DataProcessor object at 0x000001D73ACF1490>, 'CMR', None), {}] took: 0.0090 sec
root - DEBUG - func:'process_operation' args:[({'type': 'append', 'files': {'CMR': None}}, [   parcel_id  tax_year owner_name  appr_val class
0          1      2020     owner4    100000     C
1          2      2020     owner5    300000     C
2          1      2020     owner4    200000     C,    parcel_id  tax_year owner_name  appr_val class
0          1      2021     owner4    100000     C
1          2      2021     owner5    400000     C
2          1      2021     owner4    200000     C,    parcel_id  tax_year owner_name  appr_val class
0          1      2022     owner4    100000     C
1          2      2022     owner5    400000     C
2          1      2022     owner4    200000     C]), {}] took: 0.0000 sec
logger - INFO - Cleaning col: 0    owner4
1    owner5
2    owner4
3    owner4
4    owner5
5    owner4
6    owner4
7    owner5
8    owner4
Name: owner_name, dtype: object; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    1
1    2
2    1
3    1
4    2
5    1
6    1
7    2
8    1
Name: parcel_id, dtype: int64; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    2020
1    2020
2    2020
3    2021
4    2021
5    2021
6    2022
7    2022
8    2022
Name: tax_year, dtype: int64; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    100000
1    300000
2    200000
3    100000
4    400000
5    200000
6    100000
7    400000
8    200000
Name: appr_val, dtype: int64; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    C
1    C
2    C
3    C
4    C
5    C
6    C
7    C
8    C
Name: class, dtype: object; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    owner4
1    owner5
2    owner4
3    owner4
4    owner5
5    owner4
6    owner4
7    owner5
8    owner4
Name: owner_name, dtype: string; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    1
1    2
2    1
3    1
4    2
5    1
6    1
7    2
8    1
Name: parcel_id, dtype: string; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    2020
1    2020
2    2020
3    2021
4    2021
5    2021
6    2022
7    2022
8    2022
Name: tax_year, dtype: int32; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    100000.0
1    300000.0
2    200000.0
3    100000.0
4    400000.0
5    200000.0
6    100000.0
7    400000.0
8    200000.0
Name: appr_val, dtype: float64; dropped 0 duplicates, filling 0 nulls
logger - INFO - Cleaning col: 0    C
1    C
2    C
3    C
4    C
5    C
6    C
7    C
8    C
Name: class, dtype: string; dropped 0 duplicates, filling 0 nulls
logger - WARNING - Columns ['addr_num', 'addr_str'] not in DataFrame
logger - INFO - Shape of Result: (9, 5)
root - DEBUG - func:'run' args:[(<processor.DataProcessor object at 0x000001D73ACF1490>,), {}] took: 0.0310 sec
root - DEBUG - func:'write_output' args:[(<file_io.WriteOutput object at 0x000001D73ACF1490>,), {}] took: 0.0010 sec
root - DEBUG - func:'run' args:[('C:\\Users\\Nick\\Documents\\code\\ga-tax-assessment\\tests\\test_input\\config\\test_append.yaml', 'test'), {}] took: 0.0400 sec
